var Mongoose = require('../db');
var Schema = Mongoose.Schema;

var schema = new Schema({
	deviceType:Number,
	isHost:Boolean,
	deviceName:String
});

var DevType = Mongoose.InnotekDevFwDb.model('device_types', schema);

module.exports.setDevType = function(info, res)
{
	var json = JSON.parse(info);
	console.log(info);

	if (1 === json.isAdd)
	{
		var devType = new DevType(json.data);

		DevType.findOne({deviceType:json.data.deviceType}, function(err, data){

			if (err)
			{
				res.writeHead(404);
				res.write("添加失败");
				res.end();
			}
			else
			{
				if (null !== data)
				{
					res.writeHead(404);
					res.write(json.data.deviceType + "类型设备已存在");				
					res.end();
				}
				else
				{
					devType.save(function(err){

						if (err)
						{
							res.writeHead(404);
							res.write("添加失败");
						}
						else
						{
							res.writeHead(200);
							res.write("添加成功");			
						}

						res.end();
					});					
				}				
			}

		});
	}	
	else
	{
		DevType.findOne({deviceType:json.data.deviceType}, function(err, data){

			if (err)
			{
				res.writeHead(404);
				res.write("删除失败");
				res.end();
			}
			else
			{
				if (null === data)
				{
					res.writeHead(404);
					res.write(json.data.deviceType + "类型设备不存在");				
					res.end();
				}
				else
				{
					DevType.remove({deviceType:json.data.deviceType}, function(err){

						if (err)
						{
							res.writeHead(404);
							res.write("删除失败");
						}
						else
						{
							res.writeHead(200);
							res.write("删除成功");			
						}

						res.end();
					});					
				}				
			}
		});
	}
};

module.exports.getDevTypes = function(params, res)
{
	DevType.find()
	.sort({deviceType:1})
	.where('deviceType').gt(params.type)
	.limit(10)
	.exec(function(err, data){

		res.setHeader('Content-Type', 'application/string');

		if (err)
		{
			console.log("not exist " + type + " device");
			res.writeHead(404);
			res.write("[]");	
		}
		else
		{
			console.log(data);
			res.writeHead(200);	
			res.write(JSON.stringify(data));
		}

		res.end();
	});
};